<?php
/**
 * Implements hook_libraries_info();
 */
function teambuilder_activities_pdf_libraries_info() {
  // This array key lets Libraries API search for 'sites/all/libraries/example'
  // directory, which should contain the entire, original extracted library.
  $libraries['tcpdf'] = array(
    // Only used in administrative UI of Libraries API.
    'name' => 'TCPDF',
    'vendor url' => 'http://www.tcpdf.org/',
    'download url' => 'http://sourceforge.net/projects/tcpdf/files/',
    'files' => array(
      'php' => array(
        'tcpdf.php',
      ),
    ),
    // Optional: Register files to auto-load for your module. All files must be
    // keyed by module, and follow the syntax of the 'files' property.
    'integration files' => array(
      'teambuilder_activites_pdf' => array(
        'php' => array('tcpdf.php'),
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements of hook_menu().
 */ 
function teambuilder_activities_pdf_menu() {
  $items['node/%node/pdf'] = array(
    'title' => 'Opgaveudskrift',
    'page callback' => 'exercise_pdf_portrait',
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'exercise_pdf_access',
    'access arguments' => array(1)
  );
  $items['node/%node/pdf2'] = array(
    'title' => 'LÃ¦rerudskrift',
    'page callback' => 'exercise_pdf_teacher',
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'exercise_pdf_access',
    'access arguments' => array(1)
  );
  return $items;
}

function exercise_pdf_access($node) {
  if ($node->type != 'activity') {
    return false;
  }
  return true;
}

/**
 * Creates a pdf of an exercise node
 * 
 * @param $nid Node id
 *
 * @return void
 */
function exercise_pdf_portrait($node) {
  global $base_url;
  require_once libraries_get_path('tcpdf') . '/tcpdf.php';
  require_once dirname(__FILE__) . '/includes/Portrait.php';
  
  $pdf = new Teambuilder_Pdf_Portrait();
  $pdf->setBaseUrl($base_url);
  $pdf->addActivityPage($node);
  $pdf->Output();
}


function teambuilder_activities_pdf_separate_terms($node_taxonomy) {
  if ($node_taxonomy) {
    //separating terms by vocabularies
    foreach ($node_taxonomy AS $term) {
      $links[teambuilder_activities_pdf_get_vocabulary_machinename_by_vid($term->vid)]['taxonomy_term_'. $term->tid] = array(
        'title' => $term->name,
        'href' => taxonomy_term_path($term),
        'attributes' => array(
          'rel' => 'tag',
          'title' => strip_tags($term->description)
        ),
      );
    }
    //theming terms out
    foreach ($links AS $key => $vid) {
      $terms[$key] = theme_links($vid);
    }
  }
  return $terms;
}

function teambuilder_activities_pdf_get_vocabulary_machinename_by_vid($vid) {
  if(!is_numeric($vid)) {
    return false;
  }
  $result = db_query("SELECT module FROM {vocabulary} WHERE vid = %d", $vid);
  $name = db_fetch_object($result)->module;
 
  return $name ? $name : false;
}

/**
 * Creates a pdf of an exercise node
 * 
 * @param $nid Node id
 *
 * @return void
 */
function exercise_pdf_teacher($node) {
  global $base_url;
  require_once libraries_get_path('tcpdf') . '/tcpdf.php';
  require_once dirname(__FILE__) . '/includes/Teacher.php';
  
  $pdf = new Teambuilder_Pdf_Teacher();
  $pdf->setBaseUrl($base_url);
  $pdf->addActivityPage($node);
  $pdf->Output();
}

